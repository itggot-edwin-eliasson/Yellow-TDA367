This readme is for the project Yellow for course TDA-367
- https://github.com/itggot-edwin-eliasson/Yellow-TDA367
@author Viktor Valadi

_____________________________________________________________________________________

     ___    ___   _____      __       __         ________   __        __        __
     \  \  /  /  |  ___|    |  |     |  |       /  ____  \  \ \      /  \      / /
      \  \/  /   | |___     |  |     |  |      /  /    \  \  \ \    / /\ \    / /
       \    /    |  ___|    |  |     |  |      |  |    |  |   \ \  / /  \ \  / /
        |  |     | |___     |  |__   |  |__    \  \____/  /    \ \/ /    \ \/ /
        |__|     |_____|    |_____|  |_____|    \________/      \__/      \__/

_____________________________________________________________________________________

Group member - Git username

    Viktor Valadi     -   tikkiz
    Edwin Eliasson    -   itggot-edwin-eliasson
    Mona Kilsg√•rd     -   monakilsgard
    Joakim Agnemyr    -   agnemyr

_____________________________________________________________________________________

Content:
    1. Introduction
    2. User guide
    3. Git structure
    4. Program structure

_____________________________________________________________________________________

1. Introduction

The readme for the inventory and renter handling application Yellow. This readme aims
to make you understand how to run and use the program and inform you briefly of how
the application is structured.

To run the application you need to navigate to the Main class located in the
src/main/java/controller package. Run the class in your IDE to start the application.

_____________________________________________________________________________________

2. User guide

The application is built around groups and inventories. When you start the application
you will be asked to sign up or sign in. Start with creating an account if you don't
already have one.

When logged in you will see 4 big buttons that helps you navigate through the
application. The buttons are: My Yellow, Join group, Manage my Yellow and Create Group.

My Yellow / Order handling

Inside My Yellow is where you get an overview of your groups, inventories, items and
orders. Pressing a group will show that groups specific inventories and items. If you press
the order button in the bottom left panel you will get to the order window.

In the order window there is a panel at the top of the screen where you chose between
the active order (the order your making right now), ongoing orders(orders not yet
returned) and old orders (orders already returned). To complete your order navigate to
the active order, fill in the form and press complete order.

At the top right corner of My Yellow you will find a hamburger menu. Press the menu to
see your User settings and Invite codes.

Join group

To join a new group made by someone else, get their groups invite code from the
hamburger menu in the top right corner of My Yellow. Enter the code into the text
field where it says "Insert invite code", press join group and you're done.

Manage my Yellow

If you press the button Manage my Yellow you will be taken to the management page. On
this page you have three panels. One for groups, one for inventories and one for items.
Press a group to enter that group and press an inventory to enter that inventory and
see its items.

In the top of this window above every panel there is a hamburger menu icon with a +
sign on it. Press this icon to add a new group, inventory or item. To add items make
sure you already selected an inventory for that item.

Create group

This is another place to create a new group.

_____________________________________________________________________________________

3. Git structure

Documents - Contains all documentation for the project. This is where the RAD, SDD and
meeting protocols are located.

src - This is where the code is. In src/test are all the tests located. In src/main/java
is where the actual code is split up in a controller, model and view package. In
src/main/resources you can find the local "database" .ser files, all the FXML files and
the images.

______________________________________________________________________________________

4. Program structure

The code is divided into three packages with the MVC pattern as a guideline. We have a
view, a controller and a model package. The controller acts on both the controller and
the view to update the view (GUI) and controls the data flow into the model.